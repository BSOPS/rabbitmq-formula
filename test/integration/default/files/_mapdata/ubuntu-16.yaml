# -*- coding: utf-8 -*-
# vim: ft=yaml
# yamllint disable rule:indentation rule:line-length
# Ubuntu 16
---
values:
  added_in_defaults: defaults_value
  added_in_pillar: pillar_value
  arch: amd64
  dir:
    base: "/var/lib/rabbitmq"
    cleanlist:
    - "/usr/local/bin/rabbitmq-env"
    - "/usr/local/bin/rabbitmq-plugins"
    - "/var/run/rabbitmq"
    config: "/etc/rabbitmq"
    data: "/var/lib/rabbitmq"
    service: "/usr/lib/systemd/system"
  environ:
    locale_all: en_US.UTF-8
    values: {}
  erlang_cookie: shared-secret
  map_jinja:
    sources:
    - Y:G@osarch
    - Y:G@os_family
    - Y:G@os
    - Y:G@osfinger
    - C@rabbitmq:lookup
    - C@rabbitmq
    - Y:G@id
  nodes:
    rabbit:
      bindings:
        my-binding:
          destination: my-queue
          destination_type: queue
          passwd: password
          routing_key: a_routing_key_string
          source: amq.topic
          user: saltstack_mq
          vhost: default_vhost
      clustered: false
      config:
        auth_backends.1: internal
        listeners.tcp.1: 0.0.0.0:5672
      distport: 25672
      exchanges:
        my-exchange:
          arguments:
          - alternate-**exchange: amq.fanout
          - test-header: testing
          auto_delete: 'false'
          durable: 'true'
          internal: 'false'
          passwd: password
          type: fanout
          user: saltstack_mq
          vhost: default_vhost
      nodeport: 5672
      plugins:
        - rabbitmq_management
        - rabbitmq_federation
        - rabbitmq_federation_management
        - rabbitmq_auth_backend_ldap
        - rabbitmq_shovel
        - rabbitmq_shovel_management
      policies:
        my-federate-policy:
          - name: federate-me
          - pattern: '^federated\.'
          - definition: '{"federation-upstream-set":"all"}'
          - priority: 1
        my-ha-policy:
          - name: HA
          - pattern: '.*'
          - definition: '{"ha-mode":"nodes","ha-params":["rabbit", "rabbit2"]}'
      queues:
        my-queue:
          arguments:
          - x-message-ttl: 8640000
          - x-expires: 8640000
          - x-dead-letter-exchange: my-exchange
          auto_delete: 'false'
          durable: 'true'
          passwd: password
          user: saltstack_mq
          vhost: default_vhost
      remove_guest_user: true
      service: true
      upstreams:
        my-upstream1:
          - uri: 'amqp://saltstack_mq:password@localhost'
          - trust_user_id: true
          - ack_mode: on-confirm
          - max_hops: 1
      users:
        airflow:
          force: true
          password: airflow
          perms:
            default_vhost:
            - ".*"
            - ".*"
            - ".*"
          tags:
          - management
          - administrator
        saltstack_mq:
          force: false
          password: password
          perms:
            default_vhost:
            - ".*"
            - ".*"
            - ".*"
          tags:
          - administrator
          - management
        user1:
          force: true
          password: password
          perms:
            default_vhost:
            - ".*"
            - ".*"
            - ".*"
          tags:
          - monitoring
          - user
      vhosts:
      - default_vhost
    rabbit2:
      bindings:
        my-binding:
          destination: my-queue
          destination_type: queue
          passwd: password
          routing_key: a_routing_key_string
          source: amq.topic
          user: saltstack_mq
          vhost: rabbit2_vhost
      clustered: false              # true
      config:
        auth_backends.1: internal
        listeners.tcp.1: 0.0.0.0:5673
      distport: 25673
      exchanges:
        my-exchange:
          arguments:
          - alternate-**exchange: amq.fanout
          - test-header: testing
          auto_delete: 'false'
          durable: 'true'
          internal: 'false'
          passwd: password
          type: fanout
          user: saltstack_mq
          vhost: rabbit2_vhost
      join_node: rabbit   # create multinode cluster on localhost
      nodeport: 5673
      plugins: []
      policies:
        my-federate-policy:
          - name: federate-me
          - pattern: '^federated\.'
          - definition: '{"federation-upstream-set":"all"}'
          - priority: 1
        my-ha-policy:
          - name: HA
          - pattern: '.*'
          - definition: '{"ha-mode":"nodes","ha-params":["rabbit", "rabbit2"]}'
      queues:
        my-queue:
          arguments:
          - x-message-ttl: 8640000
          - x-expires: 8640000
          - x-dead-letter-exchange: my-exchange
          auto_delete: 'false'
          durable: 'true'
          passwd: password
          user: saltstack_mq
          vhost: rabbit2_vhost
      remove_guest_user: true
      service: true
      upstreams:
        my-upstream1:
          - uri: 'amqp://saltstack_mq:password@localhost'
          - trust_user_id: true
          - ack_mode: on-confirm
          - max_hops: 1
      users:
        airflow:
          force: true
          password: airflow
          perms:
            rabbit2_vhost:
            - ".*"
            - ".*"
            - ".*"
          tags:
          - management
          - administrator
        saltstack_mq:
          force: false
          password: password
          perms:
            rabbit2_vhost:
            - ".*"
            - ".*"
            - ".*"
          tags:
          - administrator
        user1:
          force: true
          password: password
          perms:
            rabbit2_vhost:
            - ".*"
            - ".*"
            - ".*"
          tags:
          - monitoring
          - user
      vhosts:
      - rabbit2_vhost
  pkg:
    deps:
    - libtinfo5
    deps_disablerepo: ''
    name: rabbitmq-server
    use_upstream: repo
  retry_option:
    attempts: 0
    interval: 60
    splay: 10
    until: true
  rootgroup: root
  tofs:
    files_switch:
    - any/path/can/be/used/here
    - id
    - roles
    - osfinger
    - os
    - os_family
    source_files:
      rabbitmq-config-file-file-managed:
      - example.tmpl.jinja
  winner: pillar
